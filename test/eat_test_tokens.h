/* This file is automatically generated from CBOR-diag format 
 * files by the script t2c.sh. 
 */

/* A completely empty UCCS token. */
/* It has no tags and no claims. */
extern const char completely_empty_token[];
#define completely_empty_SIZE 1


/* Five nested levels of submodules with a distinct nonce at each level. */
/* Each level also has a nested token. TODO: make the nested tokens real */
/* A good test to perform on this is to traverse the whole tree getting */
/* the nonces and the nested tokens and validating their values. */
/* Note that nested tokens must be signed. They can't be UCCS per */
/* the EAT standard, so when this is filled in they will be larger */
/* and not so straight forward to validate */
extern const char deeply_nested_submods_token[];
#define deeply_nested_submods_SIZE 130


extern const unsigned char dup_sumods_token[] ;
#define dup_submods_SIZE       73


/* An empty submodule (which is of course legal) */
extern const char empty_submod_token[];
#define empty_submod_SIZE 11


/* This has a submod section with two simple submodules */
/* One is empty and the other is a nested JSON token */
extern const char minimal_submod_token[];
#define minimal_submod_SIZE 40


/* This has a submod section with two simple submodules */
/* One is empty and the other is a nested JSON token */
extern const char non_string_label_submod_token[];
#define non_string_label_submod_SIZE 28


extern const char not_well_formed_submod[] ;
#define not_well_formed_submod_SIZE       11


extern const char not_well_formed_submod_section[] ;
#define not_well_formed_submod_section_SIZE        3


extern const char some_submods_token[];
#define some_submods_SIZE 82


/* Both types of submod is incorrectly an array, rather than a map and string */
extern const char submod_is_array_token[];
#define submod_is_array_SIZE 19


